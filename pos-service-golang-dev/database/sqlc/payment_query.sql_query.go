// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: payment_query.sql

package db

import (
	"context"
	"database/sql"
)

const createOrderPayments = `-- name: CreateOrderPayments :exec
INSERT INTO
    ` + "`" + `dg_pos_payments` + "`" + ` (
        order_id,
        date_time,
        amount,
        cash,
        balance,
        transaction_id,
        refund_id,
        payment_method_id,
        status,
        is_refund,
        created_at,
        updated_at
    )
VALUES (
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?
    )
`

type CreateOrderPaymentsParams struct {
	OrderID         int32          `json:"orderId"`
	DateTime        sql.NullTime   `json:"dateTime"`
	Amount          string         `json:"amount"`
	Cash            string         `json:"cash"`
	Balance         string         `json:"balance"`
	TransactionID   sql.NullString `json:"transactionId"`
	RefundID        sql.NullString `json:"refundId"`
	PaymentMethodID string         `json:"paymentMethodId"`
	Status          sql.NullString `json:"status"`
	IsRefund        bool           `json:"isRefund"`
	CreatedAt       sql.NullTime   `json:"createdAt"`
	UpdatedAt       sql.NullTime   `json:"updatedAt"`
}

func (q *Queries) CreateOrderPayments(ctx context.Context, arg *CreateOrderPaymentsParams) error {
	_, err := q.db.ExecContext(ctx, createOrderPayments,
		arg.OrderID,
		arg.DateTime,
		arg.Amount,
		arg.Cash,
		arg.Balance,
		arg.TransactionID,
		arg.RefundID,
		arg.PaymentMethodID,
		arg.Status,
		arg.IsRefund,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}
